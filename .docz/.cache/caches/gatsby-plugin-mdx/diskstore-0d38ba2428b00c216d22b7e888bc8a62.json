{"expireTime":9007200842492547000,"key":"gatsby-plugin-mdx-entire-payload-14d20e98546ebbd690a236677ee03b28-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/henry/Documentos/WorkSpace/mimoo/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":117,"offset":118},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":120},"end":{"line":5,"column":29,"offset":148},"indent":[]}},{"type":"import","value":"import { Playground, Props } from \"docz\";\nimport ListBrands from \"./\";","position":{"start":{"line":8,"column":1,"offset":151},"end":{"line":9,"column":29,"offset":221},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"ListBrands","position":{"start":{"line":11,"column":3,"offset":225},"end":{"line":11,"column":13,"offset":235},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":223},"end":{"line":11,"column":13,"offset":235},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":13,"column":4,"offset":240},"end":{"line":13,"column":9,"offset":245},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":237},"end":{"line":13,"column":9,"offset":245},"indent":[]}},{"type":"jsx","value":"<Playground>\n  {() => {\n    const [counter, setCounter] = React.useState(0)\n    return (\n      <>\n        <button onClick={() => setCounter(counter => counter+1)}>\n          Increase\n        </button>\n        <p>{counter}</p>\n      </>\n    )\n  }}\n</Playground>","position":{"start":{"line":15,"column":1,"offset":247},"end":{"line":27,"column":14,"offset":507},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Props","position":{"start":{"line":29,"column":4,"offset":512},"end":{"line":29,"column":9,"offset":517},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":509},"end":{"line":29,"column":9,"offset":517},"indent":[]}},{"type":"jsx","value":"<Props of={ListBrands} />","position":{"start":{"line":31,"column":1,"offset":519},"end":{"line":31,"column":26,"offset":544},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":34,"column":1,"offset":547},"end":{"line":34,"column":31,"offset":577},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":34,"column":31,"offset":577}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/henry/Documentos/WorkSpace/mimoo/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from \"docz\";\nimport ListBrands from \"./\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"listbrands\"\n    }}>{`ListBrands`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [counter, setCounter] = React.useState(0)\\n  return (\\n    <>\\n      <button onClick={() => setCounter(counter => counter + 1)}>\\n        Increase\\n      </button>\\n      <p>{counter}</p>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ListBrands,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [counter, setCounter] = React.useState(0);\n        return <>\n        <button onClick={() => setCounter(counter => counter + 1)}>\n          Increase\n        </button>\n        <p>{counter}</p>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ListBrands} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}